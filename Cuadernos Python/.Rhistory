vis_cor(admi)
vis_cor(admi)
vis_guess(admi)
ExPanD(admi)
install.packages("esquisse")
library(esquisse)
esquisser(data = mtcars)
esquisser(data = admi)
library("factoextra")
library("FactoMineR")
library("gplots")
library("dplyr")
O=matrix(c(24,12,31,71), nrow = 2, byrow = T)
colnames(O)=c("Anorexia", "No Anorexia")
rownames(O)=c("UCI", "No UCI")
O
#library(sjPlot)
#library(sjmisc)
#library(sjlabelled)
library(kableExtra)
O_chisq = chisq.test(O)
kable(addmargins(O_chisq$expected))
par(mfrow = c(1, 2))
mosaicplot(O,  col = 3:5, main= "Valores observados",)
mosaicplot(O_chisq$expected, col = 3:5, main= "Valores esperados")
O_chisq = chisq.test(O)
O_chisq
O_chisq$expected
library("gplots")  # tabla de cotingencia plot
balloonplot(as.table(O),label=T)
data("housetasks")
housetasks%>%head(15)%>%DT::datatable()
df<-as.table(as.matrix(housetasks))
df
balloonplot(t(df), label=F, main="Tareas del hogar")
class(housetasks)
class(housetasks$Jointly)
chisq.test(housetasks)
housetasks_CA= CA(housetasks, graph = F)
print(housetasks_CA)
housetasks_CA$col
housetasks_CA$row
fviz_screeplot(housetasks_CA, addlabel=T)
fviz_ca_biplot(housetasks_CA,repel = T)
library("corrplot")
corrplot(housetasks_CA$col$cos2)
corrplot(housetasks_CA$row$cos2 )
fviz_contrib(housetasks_CA, choice = "col" ,axes = 1)
fviz_contrib(housetasks_CA, choice = "col" ,axes = 2)
fviz_contrib(housetasks_CA, choice = "col" ,axes = 1:2)
fviz_contrib(housetasks_CA, choice = "row" ,axes = 1)
fviz_contrib(housetasks_CA, choice = "row" ,axes = 2)
fviz_contrib(housetasks_CA, choice = "row" ,axes = 1:2)
fviz_ca_biplot(housetasks_CA,repel = T, arrow=c(F,T), col.col="cos2", gradient.cols=c("red", "yellow", "green"), alpha.col="contrib")
library(vcd)
assocstats(O)
O_chisq = chisq.test(O, )
O_chisq
O_chisq = chisq.test(O,correct = F )
O_chisq = chisq.test(O,correct = F )
O_chisq
?assocstats
O=matrix(c(5,6,31,71), nrow = 2, byrow = T)
colnames(O)=c("Anorexia", "No Anorexia")
rownames(O)=c("UCI", "No UCI")
chisq.test(O)
R=chisq.test(O)
R$expected
?CA
library(FactoMineR)
library(ggplot2)
library(FactoClass)
library(factoextra)
library(Rcpp)
library(broom)
library(pander)
library(corrplot)
library(gridExtra)
library(DT)
data(admi)
DatosInicial <- subset(admi, select = c("carr", "gene", "estr", "orig","age") )
DT::datatable(DatosInicial)
data(admi)
data(admi)
admi
?admi
admi
admi
data(admi)
admi
library(ExPanDaR)
data(admi)
admi
library(ExPanDaR)
data(admi)
admi
library(ExPanDaR)
ExPanD(admi)
library(ExPanDaR)
ExPanD(admi)
fviz_mca_ind(uni.mca,
label = "none",
habillage = Sexo,
pallette = c("#CCCCFF", "#F08080"),
addEllipses = FALSE,
ggtheme = theme_grey())
library(FactoMineR)
library(ggplot2)
library(FactoClass)
library(factoextra)
library(Rcpp)
library(broom)
library(pander)
library(corrplot)
library(gridExtra)
library(DT)
data(admi)
admi
DatosInicial <- subset(admi, select = c("carr", "gene", "estr", "orig","age") )
DT::datatable(DatosInicial)
write.csv2(admi, "admisiones.csv")
Carrera <- DatosInicial$carr
Sexo <- DatosInicial$gene
Estrato <- DatosInicial$estr
Origen <- DatosInicial$orig
Edad <- as.factor(DatosInicial$age)
Datos <- cbind(DatosInicial,Carrera,Sexo,Estrato,Origen)
Datos[,1:5] <- NULL
DT::datatable(Datos)
F1<-ggplot(Datos, aes(x=Carrera)) + geom_bar(fill= "#DDB4EB")
F2<-ggplot(Datos, aes(x=Sexo)) + geom_bar(fill= "#FFD4A5")
F3<-ggplot(Datos, aes(x=Estrato)) + geom_bar(fill= "#41894A")
F4<-ggplot(Datos, aes(x=Origen)) + geom_bar(fill= "#FFEC28")
F5 <- grid.arrange(F1,F2,F3,F4, nrow = 2)
uni.mca <- MCA(Datos, graph = FALSE)
print(uni.mca)
eigenval <- get_eigenvalue(uni.mca)
pander(head(eigenval))
fviz_screeplot(uni.mca, addlabels = TRUE, ylim = c(0, 15)) + geom_hline(yintercept = 7.14, linetype = 2, color = "red")
fviz_mca_biplot(uni.mca, repel = TRUE,
ggtheme = theme_grey())+labs(
title ="           Representación simultanea de los individuos y las categorías")
var <- get_mca_var(uni.mca)
var
fviz_mca_var(uni.mca, choice = "mca.cor",
repel = TRUE, axes=c(1,2),
ggtheme = theme_grey())
pander(head(round(var$coord, 2), 15))
fviz_mca_var(uni.mca, col.var = "purple", shape.var = 10, repel = TRUE,
ggtheme = theme_grey())+labs(title = " Nube de puntos de las Modalidades/Categorías")
pander(head(var$cos2, 15))
fviz_mca_var(uni.mca, col.var = "cos2",
repel = TRUE, gradient.cols = c("#00AFBB", "#E7B800","#FC4E07"), axes = c(1,2),
ggtheme = theme_grey())+labs(title = " Nube de puntos de las Modalidades/Categorías")
fviz_cos2(uni.mca, choice = "var", axes = 1:2)+labs(title = " Cos2 de Categorías para las Dimensiones 1-2")
corrplot(var$cos2, is.corr = FALSE)
pander(head(round(var$contrib,2), 15))
fviz_contrib(uni.mca, choice = "var", axes = 1, top = 15)+labs(title = "Contribución de las Categorías para las Dimensión 1")
fviz_contrib(uni.mca, choice = "var", axes = 2, top = 15)+labs(title = "Contribución de las Categorías para las Dimensión 2")
fviz_contrib(uni.mca, choice = "var", axes = 1:2, top = 15)+labs(title = "                Contribuciones de las Categorías para las Dimensiónes 1-2")
fviz_mca_var(uni.mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800","#FC4E07"),
ggtheme = theme_grey()
, repel = TRUE)
est <- get_mca_ind(uni.mca)
est
pander(head(est$coord))
sort(est$coord[,1])
pander(head(est$cos2))
pander(head(est$contrib))
?fviz_mca_ind
fviz_mca_ind(uni.mca, col.ind = "cos2",
gradient.cols= c("blue", "white", "red"),
repel = TRUE,
ggtheme = theme_grey())
tail(est$contrib)
fviz_cos2 (uni.mca, choice = "ind", axes = 1:2, top = 50)+labs(title = "Cos2 de los individuos para las Dimensiónes 1-2")
fviz_contrib(uni.mca, choice = "ind", axes = 1:2)
fviz_mca_ind(uni.mca,
label = "none",
habillage = Sexo,
pallette = c("#CCCCFF", "#F08080"),
addEllipses = FALSE,
ggtheme = theme_grey())
fviz_ellipses(uni.mca, 1:4,
geom = "point")
uni.desc <- dimdesc(uni.mca, axes = c(1,2))
uni.desc[[1]]
uni.desc[[2]]
NuevosDatos<-cbind(Datos,Edad)
sup.mca<- MCA(NuevosDatos,quali.sup = 5,ncp=2,graph = FALSE)
coor_cat<- sup.mca$quali.sup$coord
pander(coor_cat)
coor_edad<-sup.mca$quali.sup$eta2
pander(coor_edad)
fviz_mca_var(sup.mca,repel=T)+labs(title =" Nube de puntos de Categorias y Edad Suplementaria")
#Librerias
library(car)
library(tseries)
library(urca)
library(highcharter)
library(TSstudio)
library(forecast)
library(rio)
Caffeine=rio::import("https://github.com/Wilsonsr/Series-de-Tiempo/raw/main/bases/Caffeine.csv")
View(Caffeine)
z1=ts(Caffeine[,2])   #Formato serie de tiempo
z1
summary(z1)
### Grafico para la serie
plot(z1, main="Caffeine", ylab="Concentracion")
ts_plot(z1,color = "red",title = "Caffeine", Ytitle = "Concentración")
hchart(z1) %>%hc_add_theme(hc_theme_darkunica())
ts_plot(z1,color = "red",title = "Caffeine", Ytitle = "Concentración")
hchart(z1) %>%hc_add_theme(hc_theme_darkunica())
###### Identificacion
par(mfrow=c(2,3))
plot(z1)
acf(z1, lag.max = 40)
pacf(z1, lag.max = 40)
plot(diff(z1))
abline(h=2*sqrt(var(diff(z1))), col="red", lty=2  )
abline(h=-2*sqrt(var(diff(z1))), col="red", lty=2  )
acf(diff(z1), lag.max = 40)
pacf(diff(z1), lag.max = 40)
###### Identificacion
par(mfrow=c(2,3))
plot(z1)
abline(h=2*sqrt(var(z1)), col="red", lty=2  )
abline(h=-2*sqrt(var(diff(z1))), col="red", lty=2  )
acf(z1, lag.max = 40)
abline(h=-2*sqrt(var(z1)), col="red", lty=2  )
###### Identificacion
par(mfrow=c(2,3))
plot(z1)
abline(h=2*sqrt(var(z1)), col="red", lty=2  )
abline(h=-2*sqrt(var(z1)), col="red", lty=2  )
acf(z1, lag.max = 40)
pacf(z1, lag.max = 40)
plot(diff(z1))
abline(h=2*sqrt(var(diff(z1))), col="red", lty=2  )
abline(h=-2*sqrt(var(diff(z1))), col="red", lty=2  )
acf(diff(z1), lag.max = 40)
pacf(diff(z1), lag.max = 40)
###### Identificacion
par(mfrow=c(2,3))
plot(z1)
acf(z1, lag.max = 40)
pacf(z1, lag.max = 40)
plot(diff(z1))
abline(h=2*sqrt(var(diff(z1))), col="red", lty=2  )
abline(h=-2*sqrt(var(diff(z1))), col="red", lty=2  )
acf(diff(z1), lag.max = 40)
pacf(diff(z1), lag.max = 40)
adf.test(z1)
plot(z1)
acf(z1, lag.max = 40)
pacf(z1, lag.max = 40)
plot(diff(z1))
adf.test(z1)
adf.test(z1)
pp.test(z1) # serie es estacionaria
adf.test(diff(z1))
pp.test(diff(z1))
ts_cor(diff(z1), lag.max = 40)
modelo1 = stats::arima(z1, order = c(0,1,8),
fixed = c(NA,NA,NA,NA,NA,NA,NA,NA))
modelo1
modelo1
tt=  modelo1$coef[which(modelo1$coef!=0)]/sqrt(diag(modelo1$var.coef))
modelo1$coef!=0)
which(modelo1$coef!=0)
coef[which(modelo1$coef!=0)]
coef[which(modelo1$coef!=0)]
modelo1$coef[which(modelo1$coef!=0)]
length(modelo1$coef[which(modelo1$coef!=0)])
BIC(modelo1)
et=residuals(modelo1)
z1.fit= z1-et
fitted(modelo1)
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(scale(et), type="l")
abline(h=2*sqrt(var(scale(et))), col="red", lty=2)
abline(h=-2*sqrt(var(scale(et))), col="red", lty=2)
acf(scale(et),lag.max = 20)
pacf(scale(et),lag.max = 20)
par(mfrow=c(3,2))
plot(z1)
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(scale(et), type="l")
abline(h=2*sqrt(var(scale(et))), col="red", lty=2)
abline(h=-2*sqrt(var(scale(et))), col="red", lty=2)
acf(scale(et),lag.max = 20)
pacf(scale(et),lag.max = 20)
qqPlot(et)
acf(abs(et))
plot(scale(et), type="l")
plot(scale(et), type="l")
et
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(scale(et), type="l")
abline(h=2*sqrt(var(scale(et))), col="red", lty=2)
abline(h=-2*sqrt(var(scale(et))), col="red", lty=2)
acf(scale(et),lag.max = 20)
pacf(scale(et),lag.max = 20)
qqPlot(et)
acf(abs(et))
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(et, type="l")
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(et, type="l")
abline(h=2*sqrt(var(et)), col="red", lty=2)
abline(h=-2*sqrt(var(et)), col="red", lty=2)
acf(et,lag.max = 20)
pacf(et,lag.max = 20)
qqPlot(et)
acf(abs(et))
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(et, type="l")
abline(h=2*sqrt(var(et)), col="red", lty=2)
abline(h=-2*sqrt(var(et)), col="red", lty=2)
acf(et,lag.max = 20)
pacf(et,lag.max = 20)
qqPlot(et)
acf(abs(et))
Box.test(et, lag=6,type = "Ljung-Box")
#p-value = 0.02093   Rechazamos Ho
tsdiag(modelo1,  gof.lag = 20)
jarque.bera.test(et)
jarque.bera.test(et)
runs.test(as.factor(sign(et)), alternative ="two.sided" )
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
library(readxl)
oro <- read_excel("C:/Users/wsand/Downloads/oro.xlsx")
View(oro)
#Librerias
library(car)
library(tseries)
library(urca)
library(highcharter)
library(TSstudio)
library(forecast)
library(rio)
oro <- read_excel("C:/Users/wsand/Downloads/oro.xlsx")
z1=ts(oro[,2])   #Formato serie de tiempo
z1
z1=ts(oro[,2], start = c(1998,7), frequency = 12)   #Formato serie de tiempo
z1
View(z1)
end(z1)
### Grafico para la serie
plot(z1, main="Caffeine", ylab="Concentracion")
ts_plot(z1,color = "red",title = "Caffeine", Ytitle = "Concentración")
hchart(z1) %>%hc_add_theme(hc_theme_darkunica())
###### Identificacion
par(mfrow=c(2,3))
plot(z1)
acf(z1, lag.max = 40)
pacf(z1, lag.max = 40)
plot(diff(z1))
abline(h=2*sqrt(var(diff(z1))), col="red", lty=2  )
abline(h=-2*sqrt(var(diff(z1))), col="red", lty=2  )
acf(diff(z1), lag.max = 40)
pacf(diff(z1), lag.max = 40)
adf.test(z1)
pp.test(z1) # serie es estacionaria
adf.test(diff(z1))
pp.test(diff(z1))
ts_cor(diff(z1), lag.max = 40)
modelo1 = stats::arima(z1, order = c(0,1,1),
fixed = c(NA,NA,NA,NA,NA,NA,NA,NA))
modelo1 = stats::arima(z1, order = c(0,1,1),
fixed = c(NA))
modelo1
tt=  modelo1$coef[which(modelo1$coef!=0)]/sqrt(diag(modelo1$var.coef))
1-pt(abs(tt), (modelo1$nobs - length(modelo1$coef[which(modelo1$coef!=0)])))
BIC(modelo1)
et=residuals(modelo1)
z1.fit= z1-et
fitted(modelo1)
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(scale(et), type="l")
abline(h=2*sqrt(var(scale(et))), col="red", lty=2)
abline(h=-2*sqrt(var(scale(et))), col="red", lty=2)
acf(scale(et),lag.max = 20)
pacf(scale(et),lag.max = 20)
qqPlot(et)
acf(abs(et))
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(et, type="l")
abline(h=2*sqrt(var(et)), col="red", lty=2)
abline(h=-2*sqrt(var(et)), col="red", lty=2)
acf(et,lag.max = 20)
pacf(et,lag.max = 20)
qqPlot(et)
acf(abs(et))
Box.test(et, lag=6,type = "Ljung-Box")
#p-value = 0.02093   Rechazamos Ho
tsdiag(modelo1,  gof.lag = 20)
jarque.bera.test(et)
runs.test(as.factor(sign(et)), alternative ="two.sided" )
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
modelo1 = stats::arima(z1, order = c(1,1,1),
fixed = c(NA))
modelo1 = stats::arima(z1, order = c(1,1,1),
fixed = c(NA,NA))
modelo1
tt=  modelo1$coef[which(modelo1$coef!=0)]/sqrt(diag(modelo1$var.coef))
1-pt(abs(tt), (modelo1$nobs - length(modelo1$coef[which(modelo1$coef!=0)])))
BIC(modelo1)
et=residuals(modelo1)
z1.fit= z1-et
fitted(modelo1)
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(scale(et), type="l")
abline(h=2*sqrt(var(scale(et))), col="red", lty=2)
abline(h=-2*sqrt(var(scale(et))), col="red", lty=2)
acf(scale(et),lag.max = 20)
pacf(scale(et),lag.max = 20)
qqPlot(et)
acf(abs(et))
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(et, type="l")
abline(h=2*sqrt(var(et)), col="red", lty=2)
abline(h=-2*sqrt(var(et)), col="red", lty=2)
acf(et,lag.max = 20)
pacf(et,lag.max = 20)
qqPlot(et)
acf(abs(et))
Box.test(et, lag=6,type = "Ljung-Box")
#p-value = 0.02093   Rechazamos Ho
tsdiag(modelo1,  gof.lag = 20)
jarque.bera.test(et)
runs.test(as.factor(sign(et)), alternative ="two.sided" )
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
ts_cor(diff(z1), lag.max = 40)
modelo1 = stats::arima(z1, order = c(7,1,1),
fixed = c(NA,NA,NA,NA,NA,NA,NA,NA))
modelo1
tt=  modelo1$coef[which(modelo1$coef!=0)]/sqrt(diag(modelo1$var.coef))
1-pt(abs(tt), (modelo1$nobs - length(modelo1$coef[which(modelo1$coef!=0)])))
modelo1 = stats::arima(z1, order = c(7,1,1),
fixed = c(0,0,0,0,0,NA,NA,NA))
modelo1
tt=  modelo1$coef[which(modelo1$coef!=0)]/sqrt(diag(modelo1$var.coef))
1-pt(abs(tt), (modelo1$nobs - length(modelo1$coef[which(modelo1$coef!=0)])))
BIC(modelo1)
et=residuals(modelo1)
z1.fit= z1-et
fitted(modelo1)
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(scale(et), type="l")
abline(h=2*sqrt(var(scale(et))), col="red", lty=2)
abline(h=-2*sqrt(var(scale(et))), col="red", lty=2)
acf(scale(et),lag.max = 20)
pacf(scale(et),lag.max = 20)
qqPlot(et)
acf(abs(et))
par(mfrow=c(3,2))
plot(z1)
lines(z1.fit, col="red", lty=2)
plot(et, type="l")
abline(h=2*sqrt(var(et)), col="red", lty=2)
abline(h=-2*sqrt(var(et)), col="red", lty=2)
acf(et,lag.max = 20)
pacf(et,lag.max = 20)
qqPlot(et)
acf(abs(et))
Box.test(et, lag=6,type = "Ljung-Box")
#p-value = 0.02093   Rechazamos Ho
tsdiag(modelo1,  gof.lag = 20)
jarque.bera.test(et)
runs.test(as.factor(sign(et)), alternative ="two.sided" )
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
plot(forecast(modelo1, h=6, fan=T))
lines(fitted(modelo1), col="red")
auto.arima(Z1)
auto.arima(z1)
plot(forecast(auto.arima(z1), h=6, fan=T))
lines(fitted(modelo1), col="red")
